SQL 은 DML, DDL, DCL 3가지로 나뉨.

DML - 데이터를 추가, 삭제, 수정, 검색 등을 하는 쿼리(데이터베이스 조작 언어)
데이터 조작
- SELECT = 데이터 검색
- INSERT = 데이터 추가
- UPDATE = 데이터 수정
- DELETE = 데이터 삭제

SELECT 기본형태
SELCT 컬럼명 FROM 테이블명
컬럼명의 자리는 개별로 지정가능  // * = ALL
Ex) SELECT 컬럼명 FROM 테이블명

SELECT 뒤에 원본데이터를 조합하여 새로운 컬럼을 보이게 할수있음.(실제 생성된건 아님)
Ex) SELECT *, 컬럼 * 컬럼 AS 생성된 컬럼명으로 사용할 이름 FROM ...;

사람 : 박성훈, 양명균 / 2개
팀 : A B C D / 4개

Ex) SELECT * FROM 사람, 팀
   => 8(2*4)개의 데이터가 생김.

Join - 테이블 합치기
InnerJoin 과 OutterJoin이 있다.


WHERE = 일종의 필터링 개념
WHERE 컬럼 연산자(조건식) 값
이때 값은 무조껀 ''(작은따옴표)로 감싸줌.
Ex) SELECT * FROM `city` WHERE `Name` = 'seoul'

** null 체크하는경우는 is null로 검색해야함.(반대는 is NOT null)
   비어있는경우는 컬럼 = '' 로 검색
   보통 지금처럼 0인 값이 아니라 NULL 체크하여 비어있는 데이터 확인후 조치하고자 할 때 사용

** WHERE구문이 SELECT구문보다 먼저 실행되기때문에 순서에 주의해서 쿼리를 날릴것.

or 과 and는 and가 먼저 실행됨.
a=1 or a=2 and b=1 or b=2  ===>  a=1 or (a=2 and b=1) or b=2


LIKE 검색 = 패턴 매칭
컬럼에서 검색하고자 하는 문자열의 시작/중간/끝을 기준으로 검색
검색어로 시작하는 경우 : 컬럼 LIKE '검색어%'
검색어가 포함되는 경우 : 컬럼 LIKE '%검색어%'
검색어로 끝나는 경우 : 컬럼 LIKE '%검색어'


ORDER BY = 기준을 정해서 sorting(정렬)
ORDER BY 보통 질의문 뒤에온다.
ORDER BY 컬럼명 ASC/DESC  // ASC = 오름차순, DESC = 내림차순
여기서 알아야 할 부분은 대/소 관계다.
숫자 - 작다 1 < 2 < 3 크다
날짜 시간 - 과거 2000년 < 2020년 미래
Ex) 90년대생을 검색하라
	WHERE 생년얼일 >= '1990' AND 생년월일 < '2000'
	시간은 진행형임 항상 그 날짜의 시작과 끝이 다름을 인지해야함.


DBMS의 정렬도 유니티와 동일하게 사전식 순서를 취함
문자의 경우
가방, 가족 >>>>> 가방 가족
숫자의 경우
1, 10, 2, 3, 4, 5 와 같이 정렬됨을 기억할 것.


LIMIT = 갯수제한걸기.
Ex) SELECT 컬럼명 FROM 테이블명 WHERE 조건식 ORDER BY 열명 LIMIT 행수(표현하고자 하는 데이터 수)
	OFFSET기능이 있음.

구문의 우선순위가 존재하기때문에 잘 구분해서 써야함.


ROUND - 반올림
ROUND(반올림할 숫자, 자릿수)
Ex) ROUND(5961.61, 1) = 5961.6
	0 = 소수점 첫째자리
	1 = 소수점 둘째자리

SUBSTRING - 문자열 자르기
SUBSTRING(자를 문자, 시작위치, 몇칸)
Ex) SUBSTRING('20210825', 1, 4) = '2021'

TRIM - 공백제거
Ex) TRIM('010 9337 5635') = '01093375635'

CASE - 조건식 사용
CASE WHEN 조건식 THEN 참일때 ELSE 거짓일때 END
Ex) SELECT a, b, CASE WHEN a = 0 THEN '영' ELSE a END "a 변형" FROM `example1` WHERE 1;

INSERT - 데이터 추가
값을 임력하는 갯수는 최대 컬럼 수를 넘을 수는 없음
테이블의 컬럼수가 6일 경우 값7, 8이 들어갈 경우 에러발생
Ex) INSERT INTO 테이블명(컬럼명1, 컬럼명2...) VALUES(값1, 값2...)

INSERT - 데이터 삽입
DELETE - 데이터 삭제

GROUP BY = 그룹핑

HAVING = 그룹에 적용하는 개별 필터.


------------------------------------------------------------------------------------------------------------------------------

DDL - 데이터를 정의하는것 - 데이터베이스를 만들거나 삭제
데이터 정의

------------------------------------------------------------------------------------------------------------------------------

DCL - 트랙잭션(갱신반영) 제어, 접근 권한 등을 관리
데이터 제어

INSERT / UPDATE / DELETE  등 데이터에 조작이 가해질 때 승인(Commit)해주는 동작

기본적으로 DBMS 는 자동커밋(Auto Commit)을 활용하고 있음
그러나 중요한 데이터의 조작이나 동기화 등을 위해서 수동으로 승인할 떄가 존재

이떄 사용하는것이 트랜잭션임

예로 주문과 주문상품 테이블이 존재한다고 가정 하였을 때
> 주문상품 T는 주문 T에 종속적임
  = 주문이 없으면 주문상품 테이블에 데이터가 존재할수 없음.

  1. 주문 테이블에 주문 값 추가
  INSERT INTO 주문T 11:42 << - 상태에서 취소하면 문제가 생김.

  2. 주문테이블에 있는 번호를 토대로 주문상품 테이블에 상품 추가
  INSERT INTO 주분상품T 토마토 11:42:10
  INSERT INTO 주분상품T 바나나 11:42:15
  INSERT INTO 주분상품T 빵 11:43:20

Ex) SELECT * FROM `user`;
    
    START TRANSACTION;
    DELETE FROM user WHERE userId = '1234';
    INSERT INTO user VALUES('9876','9876','9876');
    ROLLBACK;
    
    SELECT * FROM `user`;
    
    START TRANSACTION;
    DELETE FROM user WHERE userId = '1234';
    COMMIT;
    
    SELECT * FROM `user`;